<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>